<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>